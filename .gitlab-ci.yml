variables:
    BASE_IMAGE: ubuntu:18.04
    TERRAFORM_VERSION: 0.11.13
    TERRAFORM_URL: https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
    AWS_IAM_URL: https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.7/2019-03-27/bin/linux/amd64/aws-iam-authenticator

stages:
  - build-images-and-terraform
  - kubernetes
  - cleanup

.before-bazel-builds: &before_bazel_builds
  - mkdir -p ~/.docker
  - "echo {\\\"auths\\\": {\\\"index.docker.io\\\": {\\\"auth\\\": \\\"`echo -n $DOCKER_USER:$DOCKER_PASS | base64`\\\"}}} > ~/.docker/config.json"
  - apt update && apt install -yq pkg-config zip g++ zlib1g-dev unzip python curl git
  - apt install -y openjdk-8-jdk
  - echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8" | tee /etc/apt/sources.list.d/bazel.list
  - curl https://bazel.build/bazel-release.pub.gpg | apt-key add -
  - apt update && apt install -y bazel

build-docker-bazel-build-wrapper:
  stage: build-images-and-terraform
  image: docker:stable
  services:
    - docker:dind
  script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASS
    - (cd docker/bazel && docker build -t $DOCKER_ACCOUNT/bazel-build:$CI_PIPELINE_ID -t $DOCKER_ACCOUNT/bazel-build:latest -f bazel-build.Dockerfile .)
    - docker push $DOCKER_ACCOUNT/bazel-build:$CI_PIPELINE_ID
    - if [ "$CI_COMMIT_REF_NAME" == "master" ]; then docker push $DOCKER_ACCOUNT/bazel-build:latest; fi

build-buildbarn-remote-execution:
  stage: build-images-and-terraform
  image: $BASE_IMAGE
  before_script: *before_bazel_builds
  script:
    - git clone https://github.com/buildbarn/bb-remote-execution
    - (cd bb-remote-execution; git apply ../patches/bb-remote-execution/*patch)
    - cat patches/httplib2/workspace >> bb-remote-execution/WORKSPACE
    - cp patches/httplib2/cacert.patch bb-remote-execution/
    - cat bb-remote-execution/WORKSPACE
    - ls bb-remote-execution/
    - |
      for service in bb_worker bb_scheduler bb_runner_ubuntu16_04; do
          service_folder=`echo $service | cut -d _ -f -2`
          output_dir="bb-remote-execution/bazel-bin/cmd/${service_folder}"

          if [ "$CI_COMMIT_REF_NAME" == "master" ]; then
              (cd bb-remote-execution && bazel build //cmd/${service_folder}:${service}_container_push)
              sed -i $output_dir/${service}_container_push -e "s#index.docker.io/buildbarn/\(.*\):{BUILD_SCM_TIMESTAMP}-{BUILD_SCM_REVISION}#index.docker.io/$DOCKER_ACCOUNT/\1:latest#"
              bash $output_dir/${service}_container_push
          fi

          (cd bb-remote-execution && bazel build //cmd/${service_folder}:${service}_container_push)
          sed -i $output_dir/${service}_container_push -e "s#index.docker.io/buildbarn/\(.*\):{BUILD_SCM_TIMESTAMP}-{BUILD_SCM_REVISION}#$CI_REGISTRY/$CI_PROJECT_PATH/\1:$CI_PIPELINE_ID#"
          bash $output_dir/${service}_container_push
      done

.build-buildbarn-template: &build-buildbarn-template
  stage: build-images-and-terraform
  image: $BASE_IMAGE
  before_script: *before_bazel_builds
  script:
    - git clone $REPO $SERVICE
    - output_dir="${SERVICE}/bazel-bin/cmd/${SERVICE}"

    - |
      if [ "$CI_COMMIT_REF_NAME" == "master" ]; then
          (cd ${SERVICE} && bazel build //cmd/${SERVICE}:${SERVICE}_container_push)
          sed -i $output_dir/${SERVICE}_container_push -e "s#index.docker.io/buildbarn/\(.*\):{BUILD_SCM_TIMESTAMP}-{BUILD_SCM_REVISION}#index.docker.io/$DOCKER_ACCOUNT/\1:latest#"
          bash $output_dir/${SERVICE}_container_push
      fi

    - (cd ${SERVICE} && bazel build //cmd/${SERVICE}:${SERVICE}_container_push)
    - sed -i $output_dir/${SERVICE}_container_push -e "s#index.docker.io/buildbarn/\(.*\):{BUILD_SCM_TIMESTAMP}-{BUILD_SCM_REVISION}#index.docker.io/$DOCKER_ACCOUNT/\1:$CI_PIPELINE_ID#"
    - bash $output_dir/${SERVICE}_container_push


build-buildbarn-storage:
  variables:
    REPO: https://github.com/buildbarn/bb-storage
    SERVICE: bb_storage
  <<: *build-buildbarn-template
